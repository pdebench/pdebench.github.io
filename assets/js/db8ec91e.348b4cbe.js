"use strict";(self.webpackChunkpdebenchdocs=self.webpackChunkpdebenchdocs||[]).push([[975],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),i=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=i(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=i(a),m=r,h=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return a?n.createElement(h,l(l({ref:t},c),{},{components:a})):n.createElement(h,l({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var i=2;i<o;i++)l[i]=a[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},505:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_position:0},l="Setting up PDEBench",s={unversionedId:"tutorial-basics/setting-up-pdebench",id:"tutorial-basics/setting-up-pdebench",title:"Setting up PDEBench",description:"Steps to set up PDEBench repo on your workstation.",source:"@site/docs/tutorial-basics/setting-up-pdebench.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/setting-up-pdebench",permalink:"/docs/tutorial-basics/setting-up-pdebench",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/setting-up-pdebench.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Tutorial - Basics",permalink:"/docs/category/tutorial---basics"},next:{title:"Adding a new baseline model",permalink:"/docs/tutorial-basics/add-new-baseline"}},p={},i=[{value:"Step 0:",id:"step-0",level:5},{value:"Step 1:",id:"step-1",level:5},{value:"Step 2:",id:"step-2",level:5}],c={toc:i};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"setting-up-pdebench"},"Setting up PDEBench"),(0,r.kt)("p",null,"Steps to set up PDEBench repo on your workstation."),(0,r.kt)("h5",{id:"step-0"},"Step 0:"),(0,r.kt)("p",null,"Install ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/conda-forge/miniforge#mambaforge"},"Mambaforge"),". On *nix systems, this would be:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget -c https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh\nchmod a+x Mambaforge-Linux-x86_64.sh\nbash Mambaforge-Linux-x86_64.sh\n")),(0,r.kt)("p",null,"Alternatively, if you have already installed ",(0,r.kt)("em",{parentName:"p"},"anaconda"),", first install ",(0,r.kt)("inlineCode",{parentName:"p"},"mamba")," using:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"conda install -c conda-forge mamba -n base\n")),(0,r.kt)("hr",null),(0,r.kt)("h5",{id:"step-1"},"Step 1:"),(0,r.kt)("p",null,"Then create a new conda environment, say ",(0,r.kt)("em",{parentName:"p"},"pdebenchenv"),", using:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mamba create -n pdebenchenv python==3.9\n")),(0,r.kt)("p",null,"And, activate the newly created conda environment with the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"conda activate pdebenchenv\n")),(0,r.kt)("hr",null),(0,r.kt)("h5",{id:"step-2"},"Step 2:"),(0,r.kt)("p",null,"Now, let's install the packages that are needed to run the benchmark."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mamba install deepxde hydra-core h5py\n")),(0,r.kt)("p",null,"Depending on your hardware setup, ",(0,r.kt)("a",{parentName:"p",href:"https://pytorch.org/get-started/locally/#start-locally"},"install PyTorch"),". For instance, to install ",(0,r.kt)("inlineCode",{parentName:"p"},"pytorch 1.13.0")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"cuda version 11.7"),", do:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mamba install -c pytorch -c nvidia pytorch==1.13.0 torchvision torchaudio pytorch-cuda==11.7\n")),(0,r.kt)("p",null,"Install (optional) dependencies for ",(0,r.kt)("em",{parentName:"p"},"generating data")," which we will subsequently use to run the baseline models:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mamba install clawpack jax jaxlib python-dotenv\n")),(0,r.kt)("p",null,"Install the ",(0,r.kt)("a",{parentName:"p",href:"https://pypi.org/project/pyDaRUS"},(0,r.kt)("inlineCode",{parentName:"a"},"pyDarus"))," package for downloading ",(0,r.kt)("a",{parentName:"p",href:"https://darus.uni-stuttgart.de/dataset.xhtml?persistentId=doi:10.18419/darus-2986"},"PDEBench datasets from Uni Stuttgart's DaRUS server"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pip install pyDaRUS==1.0.5\n")),(0,r.kt)("hr",null),(0,r.kt)("p",null,"optionally, clean the unnecessary tar files (just to save disk space):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mamba clean -a\n")))}u.isMDXComponent=!0}}]);